{"version":3,"file":"comment.js","sources":["../node_modules/.pnpm/@waline+api@1.0.0-alpha.8/node_modules/@waline/api/dist/api.js","../src/utils/path.ts","../src/utils/config.ts","../src/utils/error.ts","../src/utils/query.ts","../src/comment.ts","../src/version.ts"],"sourcesContent":["const m={\"Content-Type\":\"application/json\"},s=e=>`${e.replace(/\\/?$/,\"/\")}api/`,c=(e,n=\"\")=>{if(typeof e==\"object\"&&e.errno)throw new TypeError(`${n} failed with ${e.errno}: ${e.errmsg}`);return e},p=({serverURL:e,lang:n,paths:o,type:a,signal:t})=>fetch(`${s(e)}article?path=${encodeURIComponent(o.join(\",\"))}&type=${encodeURIComponent(a.join(\",\"))}&lang=${n}`,{signal:t}).then(r=>r.json()).then(r=>c(r,\"Get counter\").data),d=({serverURL:e,lang:n,path:o,type:a,action:t})=>fetch(`${s(e)}article?lang=${n}`,{method:\"POST\",headers:m,body:JSON.stringify({path:o,type:a,action:t})}).then(r=>r.json()).then(r=>c(r,\"Update counter\").data),$=({serverURL:e,lang:n,path:o,page:a,pageSize:t,sortBy:r,signal:h,token:i})=>{const l={};return i&&(l.Authorization=`Bearer ${i}`),fetch(`${s(e)}comment?path=${encodeURIComponent(o)}&pageSize=${t}&page=${a}&lang=${n}&sortBy=${r}`,{signal:h,headers:l}).then(g=>g.json()).then(g=>c(g,\"Get comment data\").data)},u=({serverURL:e,lang:n,token:o,comment:a})=>{const t={\"Content-Type\":\"application/json\"};return o&&(t.Authorization=`Bearer ${o}`),fetch(`${s(e)}comment?lang=${n}`,{method:\"POST\",headers:t,body:JSON.stringify(a)}).then(r=>r.json())},y=({serverURL:e,lang:n,token:o,objectId:a})=>fetch(`${s(e)}comment/${a}?lang=${n}`,{method:\"DELETE\",headers:{Authorization:`Bearer ${o}`}}).then(t=>t.json()).then(t=>c(t,\"Delete comment\")),U=({serverURL:e,lang:n,token:o,objectId:a,comment:t})=>fetch(`${s(e)}comment/${a}?lang=${n}`,{method:\"PUT\",headers:{...m,Authorization:`Bearer ${o}`},body:JSON.stringify(t)}).then(r=>r.json()).then(r=>c(r,\"Update comment\")),f=({serverURL:e,lang:n,paths:o,signal:a})=>fetch(`${s(e)}comment?type=count&url=${encodeURIComponent(o.join(\",\"))}&lang=${n}`,{signal:a}).then(t=>t.json()).then(t=>c(t,\"Get comment count\").data),R=({lang:e,serverURL:n})=>{const o=(window.innerWidth-450)/2,a=(window.innerHeight-450)/2,t=window.open(`${n.replace(/\\/$/,\"\")}/ui/login?lng=${encodeURIComponent(e)}`,\"_blank\",`width=450,height=450,left=${o},top=${a},scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no`);return t?.postMessage({type:\"TOKEN\",data:null},\"*\"),new Promise(r=>{const h=({data:i})=>{!i||typeof i!=\"object\"||i.type!==\"userInfo\"||i.data.token&&(t?.close(),window.removeEventListener(\"message\",h),r(i.data))};window.addEventListener(\"message\",h)})},j=({serverURL:e,lang:n,paths:o,signal:a})=>p({serverURL:e,lang:n,paths:o,type:[\"time\"],signal:a}),v=e=>d({...e,type:\"time\",action:\"inc\"}),w=({serverURL:e,lang:n,count:o,signal:a,token:t})=>{const r={};return t&&(r.Authorization=`Bearer ${t}`),fetch(`${s(e)}comment?type=recent&count=${o}&lang=${n}`,{signal:a,headers:r}).then(h=>h.json())},C=({serverURL:e,signal:n,pageSize:o,lang:a})=>fetch(`${s(e)}user?pageSize=${o}&lang=${a}`,{signal:n}).then(t=>t.json()).then(t=>c(t,\"user list\")).then(t=>t.data);export{u as addComment,y as deleteComment,f as fetchCommentCount,p as getArticleCounter,$ as getComment,j as getPageview,w as getRecentComment,C as getUserList,R as login,d as updateArticleCounter,U as updateComment,v as updatePageview};\n//# sourceMappingURL=api.js.map\n","export const decodePath = (path: string): string => {\r\n  try {\r\n    path = decodeURI(path);\r\n  } catch (err) {\r\n    // ignore error\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\nexport const removeEndingSplash = (content = ''): string =>\r\n  content.replace(/\\/$/u, '');\r\n\r\nexport const isLinkHttp = (link: string): boolean =>\r\n  /^(https?:)?\\/\\//.test(link);\r\n","import { decodePath, isLinkHttp, removeEndingSplash } from './path.js';\r\nimport {\r\n  DEFAULT_EMOJI,\r\n  DEFAULT_REACTION,\r\n  defaultHighlighter,\r\n  defaultTeXRenderer,\r\n  defaultUploadImage,\r\n  getDefaultSearchOptions,\r\n  getLang,\r\n  getLocale,\r\n  getMeta,\r\n} from '../config/index.js';\r\nimport type {\r\n  WalineEmojiInfo,\r\n  WalineEmojiMaps,\r\n  WalineLocale,\r\n  WalineProps,\r\n} from '../typings/index.js';\r\n\r\nexport interface WalineEmojiConfig {\r\n  tabs: Pick<WalineEmojiInfo, 'name' | 'icon' | 'items'>[];\r\n  map: WalineEmojiMaps;\r\n}\r\n\r\nexport interface WalineConfig\r\n  extends Required<\r\n    Omit<\r\n      WalineProps,\r\n      | 'emoji'\r\n      | 'imageUploader'\r\n      | 'highlighter'\r\n      | 'texRenderer'\r\n      | 'wordLimit'\r\n      | 'reaction'\r\n      | 'search'\r\n    >\r\n  > {\r\n  locale: WalineLocale;\r\n  wordLimit: [number, number] | false;\r\n  reaction: string[];\r\n  emoji: Exclude<WalineProps['emoji'], boolean | undefined>;\r\n  highlighter: Exclude<WalineProps['highlighter'], true | undefined>;\r\n  imageUploader: Exclude<WalineProps['imageUploader'], true | undefined>;\r\n  texRenderer: Exclude<WalineProps['texRenderer'], true | undefined>;\r\n  search: Exclude<WalineProps['search'], true | undefined>;\r\n}\r\n\r\nexport const getServerURL = (serverURL: string): string => {\r\n  const result = removeEndingSplash(serverURL);\r\n\r\n  return isLinkHttp(result) ? result : `https://${result}`;\r\n};\r\n\r\nconst getWordLimit = (\r\n  wordLimit: WalineProps['wordLimit'],\r\n): [number, number] | false =>\r\n  Array.isArray(wordLimit) ? wordLimit : wordLimit ? [0, wordLimit] : false;\r\n\r\nconst fallback = <T = unknown>(\r\n  value: T | boolean | undefined,\r\n  fallback: T,\r\n): T | false =>\r\n  typeof value === 'function' ? value : value === false ? false : fallback;\r\n\r\nexport const getConfig = ({\r\n  serverURL,\r\n\r\n  path = location.pathname,\r\n  lang = typeof navigator === 'undefined' ? 'en-US' : navigator.language,\r\n  locale,\r\n  emoji = DEFAULT_EMOJI,\r\n  meta = ['nick', 'mail', 'link'],\r\n  requiredMeta = [],\r\n  dark = false,\r\n  pageSize = 10,\r\n  wordLimit,\r\n  imageUploader,\r\n  highlighter,\r\n  texRenderer,\r\n  copyright = true,\r\n  login = 'enable',\r\n  search,\r\n  reaction,\r\n  recaptchaV3Key = '',\r\n  turnstileKey = '',\r\n  commentSorting = 'latest',\r\n  ...more\r\n}: WalineProps): WalineConfig => ({\r\n  serverURL: getServerURL(serverURL),\r\n  path: decodePath(path),\r\n  lang: getLang(lang),\r\n  locale: {\r\n    ...getLocale(getLang(lang)),\r\n    ...(typeof locale === 'object' ? locale : {}),\r\n  } as WalineLocale,\r\n  wordLimit: getWordLimit(wordLimit),\r\n  meta: getMeta(meta),\r\n  requiredMeta: getMeta(requiredMeta),\r\n  imageUploader: fallback(imageUploader, defaultUploadImage),\r\n  highlighter: fallback(highlighter, defaultHighlighter),\r\n  texRenderer: fallback(texRenderer, defaultTeXRenderer),\r\n  dark,\r\n  emoji: typeof emoji === 'boolean' ? (emoji ? DEFAULT_EMOJI : []) : emoji,\r\n  pageSize,\r\n  login,\r\n  copyright,\r\n  search:\r\n    search === false\r\n      ? false\r\n      : typeof search === 'object'\r\n        ? search\r\n        : getDefaultSearchOptions(lang),\r\n  recaptchaV3Key,\r\n  turnstileKey,\r\n  reaction: Array.isArray(reaction)\r\n    ? reaction\r\n    : reaction === true\r\n      ? DEFAULT_REACTION\r\n      : [],\r\n  commentSorting,\r\n  ...more,\r\n});\r\n","export const errorHandler = (err: Error): void => {\r\n  if (err.name !== 'AbortError') console.error(err.message);\r\n};\r\n","export const getQuery = (element: HTMLElement): string | null => {\r\n  const { path } = element.dataset;\r\n\r\n  return path?.length ? path : null;\r\n};\r\n","import { fetchCommentCount } from '@waline/api';\r\n\r\nimport type { WalineAbort } from './typings/index.js';\r\nimport {\r\n  decodePath,\r\n  errorHandler,\r\n  getQuery,\r\n  getServerURL,\r\n} from './utils/index.js';\r\n\r\nexport interface WalineCommentCountOptions {\r\n  /**\r\n   * Waline 服务端地址\r\n   *\r\n   * Waline server url\r\n   */\r\n  serverURL: string;\r\n\r\n  /**\r\n   * 评论数 CSS 选择器\r\n   *\r\n   * Comment count CSS selector\r\n   *\r\n   * @default '.waline-comment-count'\r\n   */\r\n  selector?: string;\r\n\r\n  /**\r\n   * 需要获取的默认路径\r\n   *\r\n   * Path to be fetched by default\r\n   *\r\n   * @default window.location.pathname\r\n   */\r\n  path?: string;\r\n\r\n  /**\r\n   * 错误提示消息所使用的语言\r\n   *\r\n   * Language of error message\r\n   *\r\n   * @default navigator.language\r\n   */\r\n  lang?: string;\r\n}\r\n\r\nexport const commentCount = ({\r\n  serverURL,\r\n  path = window.location.pathname,\r\n  selector = '.waline-comment-count',\r\n  lang = navigator.language,\r\n}: WalineCommentCountOptions): WalineAbort => {\r\n  const controller = new AbortController();\r\n\r\n  // comment count\r\n  const elements = document.querySelectorAll<HTMLElement>(selector);\r\n\r\n  if (elements.length)\r\n    void fetchCommentCount({\r\n      serverURL: getServerURL(serverURL),\r\n      paths: Array.from(elements).map((element) =>\r\n        decodePath(getQuery(element) ?? path),\r\n      ),\r\n      lang,\r\n      signal: controller.signal,\r\n    })\r\n      .then((counts) => {\r\n        elements.forEach((element, index) => {\r\n          element.innerText = counts[index].toString();\r\n        });\r\n      })\r\n      .catch(errorHandler);\r\n\r\n  return controller.abort.bind(controller);\r\n};\r\n","declare const VERSION: string;\r\n\r\nexport const version = VERSION;\r\n"],"names":["s","e","c","n","f","o","a","t","decodePath","path","removeEndingSplash","content","isLinkHttp","link","getServerURL","serverURL","result","errorHandler","err","getQuery","element","commentCount","selector","lang","controller","elements","fetchCommentCount","counts","index","version"],"mappings":"AAAK,MAAuCA,EAAEC,GAAG,GAAGA,EAAE,QAAQ,OAAO,GAAG,CAAC,OAAOC,EAAE,CAACD,EAAEE,EAAE,KAAK,CAAC,GAAG,OAAOF,GAAG,UAAUA,EAAE,MAAM,MAAM,IAAI,UAAU,GAAGE,CAAC,gBAAgBF,EAAE,KAAK,KAAKA,EAAE,MAAM,EAAE,EAAE,OAAOA,CAAC,EAAg3CG,EAAE,CAAC,CAAC,UAAUH,EAAE,KAAKE,EAAE,MAAME,EAAE,OAAOC,CAAC,IAAI,MAAM,GAAGN,EAAEC,CAAC,CAAC,0BAA0B,mBAAmBI,EAAE,KAAK,GAAG,CAAC,CAAC,SAASF,CAAC,GAAG,CAAC,OAAOG,CAAC,CAAC,EAAE,KAAKC,GAAGA,EAAE,KAAM,CAAA,EAAE,KAAKA,GAAGL,EAAEK,EAAE,mBAAmB,EAAE,IAAI,ECAxuDC,EAAcC,GAAyB,CAClD,GAAI,CACFA,EAAO,UAAUA,CAAI,CACvB,MAAc,CAAA,CAId,OAAOA,CACT,EAEaC,EAAqB,CAACC,EAAU,KAC3CA,EAAQ,QAAQ,OAAQ,EAAE,EAEfC,EAAcC,GACzB,kBAAkB,KAAKA,CAAI,ECiChBC,EAAgBC,GAA8B,CACzD,MAAMC,EAASN,EAAmBK,CAAS,EAE3C,OAAOH,EAAWI,CAAM,EAAIA,EAAS,WAAWA,CAAM,EACxD,ECnDaC,EAAgBC,GAAqB,CAC5CA,EAAI,OAAS,cAAc,QAAQ,MAAMA,EAAI,OAAO,CAC1D,ECFaC,EAAYC,GAAwC,CAC/D,KAAM,CAAE,KAAAX,CAAK,EAAIW,EAAQ,QAEzB,OAAOX,GAAA,MAAAA,EAAM,OAASA,EAAO,IAC/B,EC0CaY,EAAe,CAAC,CAC3B,UAAAN,EACA,KAAAN,EAAO,OAAO,SAAS,SACvB,SAAAa,EAAW,wBACX,KAAAC,EAAO,UAAU,QACnB,IAA8C,CAC5C,MAAMC,EAAa,IAAI,gBAGjBC,EAAW,SAAS,iBAA8BH,CAAQ,EAEhE,OAAIG,EAAS,QACNC,EAAkB,CACrB,UAAWZ,EAAaC,CAAS,EACjC,MAAO,MAAM,KAAKU,CAAQ,EAAE,IAAKL,GAC/BZ,EAAWW,EAASC,CAAO,GAAKX,CAAI,CACtC,EACA,KAAAc,EACA,OAAQC,EAAW,MACrB,CAAC,EACE,KAAMG,GAAW,CAChBF,EAAS,QAAQ,CAACL,EAASQ,IAAU,CACnCR,EAAQ,UAAYO,EAAOC,CAAK,EAAE,SAAS,CAC7C,CAAC,CACH,CAAC,EACA,MAAMX,CAAY,EAEhBO,EAAW,MAAM,KAAKA,CAAU,CACzC,ECxEaK,EAAU","x_google_ignoreList":[0]}