{"version":3,"file":"pageview.js","sources":["../src/version.ts","../node_modules/.pnpm/@waline+api@1.0.0-alpha.8/node_modules/@waline/api/dist/api.js","../src/utils/path.ts","../src/utils/config.ts","../src/utils/error.ts","../src/utils/query.ts","../src/pageview.ts"],"sourcesContent":["declare const VERSION: string;\r\n\r\nexport const version = VERSION;\r\n","const m={\"Content-Type\":\"application/json\"},s=e=>`${e.replace(/\\/?$/,\"/\")}api/`,c=(e,n=\"\")=>{if(typeof e==\"object\"&&e.errno)throw new TypeError(`${n} failed with ${e.errno}: ${e.errmsg}`);return e},p=({serverURL:e,lang:n,paths:o,type:a,signal:t})=>fetch(`${s(e)}article?path=${encodeURIComponent(o.join(\",\"))}&type=${encodeURIComponent(a.join(\",\"))}&lang=${n}`,{signal:t}).then(r=>r.json()).then(r=>c(r,\"Get counter\").data),d=({serverURL:e,lang:n,path:o,type:a,action:t})=>fetch(`${s(e)}article?lang=${n}`,{method:\"POST\",headers:m,body:JSON.stringify({path:o,type:a,action:t})}).then(r=>r.json()).then(r=>c(r,\"Update counter\").data),$=({serverURL:e,lang:n,path:o,page:a,pageSize:t,sortBy:r,signal:h,token:i})=>{const l={};return i&&(l.Authorization=`Bearer ${i}`),fetch(`${s(e)}comment?path=${encodeURIComponent(o)}&pageSize=${t}&page=${a}&lang=${n}&sortBy=${r}`,{signal:h,headers:l}).then(g=>g.json()).then(g=>c(g,\"Get comment data\").data)},u=({serverURL:e,lang:n,token:o,comment:a})=>{const t={\"Content-Type\":\"application/json\"};return o&&(t.Authorization=`Bearer ${o}`),fetch(`${s(e)}comment?lang=${n}`,{method:\"POST\",headers:t,body:JSON.stringify(a)}).then(r=>r.json())},y=({serverURL:e,lang:n,token:o,objectId:a})=>fetch(`${s(e)}comment/${a}?lang=${n}`,{method:\"DELETE\",headers:{Authorization:`Bearer ${o}`}}).then(t=>t.json()).then(t=>c(t,\"Delete comment\")),U=({serverURL:e,lang:n,token:o,objectId:a,comment:t})=>fetch(`${s(e)}comment/${a}?lang=${n}`,{method:\"PUT\",headers:{...m,Authorization:`Bearer ${o}`},body:JSON.stringify(t)}).then(r=>r.json()).then(r=>c(r,\"Update comment\")),f=({serverURL:e,lang:n,paths:o,signal:a})=>fetch(`${s(e)}comment?type=count&url=${encodeURIComponent(o.join(\",\"))}&lang=${n}`,{signal:a}).then(t=>t.json()).then(t=>c(t,\"Get comment count\").data),R=({lang:e,serverURL:n})=>{const o=(window.innerWidth-450)/2,a=(window.innerHeight-450)/2,t=window.open(`${n.replace(/\\/$/,\"\")}/ui/login?lng=${encodeURIComponent(e)}`,\"_blank\",`width=450,height=450,left=${o},top=${a},scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no`);return t?.postMessage({type:\"TOKEN\",data:null},\"*\"),new Promise(r=>{const h=({data:i})=>{!i||typeof i!=\"object\"||i.type!==\"userInfo\"||i.data.token&&(t?.close(),window.removeEventListener(\"message\",h),r(i.data))};window.addEventListener(\"message\",h)})},j=({serverURL:e,lang:n,paths:o,signal:a})=>p({serverURL:e,lang:n,paths:o,type:[\"time\"],signal:a}),v=e=>d({...e,type:\"time\",action:\"inc\"}),w=({serverURL:e,lang:n,count:o,signal:a,token:t})=>{const r={};return t&&(r.Authorization=`Bearer ${t}`),fetch(`${s(e)}comment?type=recent&count=${o}&lang=${n}`,{signal:a,headers:r}).then(h=>h.json())},C=({serverURL:e,signal:n,pageSize:o,lang:a})=>fetch(`${s(e)}user?pageSize=${o}&lang=${a}`,{signal:n}).then(t=>t.json()).then(t=>c(t,\"user list\")).then(t=>t.data);export{u as addComment,y as deleteComment,f as fetchCommentCount,p as getArticleCounter,$ as getComment,j as getPageview,w as getRecentComment,C as getUserList,R as login,d as updateArticleCounter,U as updateComment,v as updatePageview};\n//# sourceMappingURL=api.js.map\n","export const decodePath = (path: string): string => {\r\n  try {\r\n    path = decodeURI(path);\r\n  } catch (err) {\r\n    // ignore error\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\nexport const removeEndingSplash = (content = ''): string =>\r\n  content.replace(/\\/$/u, '');\r\n\r\nexport const isLinkHttp = (link: string): boolean =>\r\n  /^(https?:)?\\/\\//.test(link);\r\n","import { decodePath, isLinkHttp, removeEndingSplash } from './path.js';\r\nimport {\r\n  DEFAULT_EMOJI,\r\n  DEFAULT_REACTION,\r\n  defaultHighlighter,\r\n  defaultTeXRenderer,\r\n  defaultUploadImage,\r\n  getDefaultSearchOptions,\r\n  getLang,\r\n  getLocale,\r\n  getMeta,\r\n} from '../config/index.js';\r\nimport type {\r\n  WalineEmojiInfo,\r\n  WalineEmojiMaps,\r\n  WalineLocale,\r\n  WalineProps,\r\n} from '../typings/index.js';\r\n\r\nexport interface WalineEmojiConfig {\r\n  tabs: Pick<WalineEmojiInfo, 'name' | 'icon' | 'items'>[];\r\n  map: WalineEmojiMaps;\r\n}\r\n\r\nexport interface WalineConfig\r\n  extends Required<\r\n    Omit<\r\n      WalineProps,\r\n      | 'emoji'\r\n      | 'imageUploader'\r\n      | 'highlighter'\r\n      | 'texRenderer'\r\n      | 'wordLimit'\r\n      | 'reaction'\r\n      | 'search'\r\n    >\r\n  > {\r\n  locale: WalineLocale;\r\n  wordLimit: [number, number] | false;\r\n  reaction: string[];\r\n  emoji: Exclude<WalineProps['emoji'], boolean | undefined>;\r\n  highlighter: Exclude<WalineProps['highlighter'], true | undefined>;\r\n  imageUploader: Exclude<WalineProps['imageUploader'], true | undefined>;\r\n  texRenderer: Exclude<WalineProps['texRenderer'], true | undefined>;\r\n  search: Exclude<WalineProps['search'], true | undefined>;\r\n}\r\n\r\nexport const getServerURL = (serverURL: string): string => {\r\n  const result = removeEndingSplash(serverURL);\r\n\r\n  return isLinkHttp(result) ? result : `https://${result}`;\r\n};\r\n\r\nconst getWordLimit = (\r\n  wordLimit: WalineProps['wordLimit'],\r\n): [number, number] | false =>\r\n  Array.isArray(wordLimit) ? wordLimit : wordLimit ? [0, wordLimit] : false;\r\n\r\nconst fallback = <T = unknown>(\r\n  value: T | boolean | undefined,\r\n  fallback: T,\r\n): T | false =>\r\n  typeof value === 'function' ? value : value === false ? false : fallback;\r\n\r\nexport const getConfig = ({\r\n  serverURL,\r\n\r\n  path = location.pathname,\r\n  lang = typeof navigator === 'undefined' ? 'en-US' : navigator.language,\r\n  locale,\r\n  emoji = DEFAULT_EMOJI,\r\n  meta = ['nick', 'mail', 'link'],\r\n  requiredMeta = [],\r\n  dark = false,\r\n  pageSize = 10,\r\n  wordLimit,\r\n  imageUploader,\r\n  highlighter,\r\n  texRenderer,\r\n  copyright = true,\r\n  login = 'enable',\r\n  search,\r\n  reaction,\r\n  recaptchaV3Key = '',\r\n  turnstileKey = '',\r\n  commentSorting = 'latest',\r\n  ...more\r\n}: WalineProps): WalineConfig => ({\r\n  serverURL: getServerURL(serverURL),\r\n  path: decodePath(path),\r\n  lang: getLang(lang),\r\n  locale: {\r\n    ...getLocale(getLang(lang)),\r\n    ...(typeof locale === 'object' ? locale : {}),\r\n  } as WalineLocale,\r\n  wordLimit: getWordLimit(wordLimit),\r\n  meta: getMeta(meta),\r\n  requiredMeta: getMeta(requiredMeta),\r\n  imageUploader: fallback(imageUploader, defaultUploadImage),\r\n  highlighter: fallback(highlighter, defaultHighlighter),\r\n  texRenderer: fallback(texRenderer, defaultTeXRenderer),\r\n  dark,\r\n  emoji: typeof emoji === 'boolean' ? (emoji ? DEFAULT_EMOJI : []) : emoji,\r\n  pageSize,\r\n  login,\r\n  copyright,\r\n  search:\r\n    search === false\r\n      ? false\r\n      : typeof search === 'object'\r\n        ? search\r\n        : getDefaultSearchOptions(lang),\r\n  recaptchaV3Key,\r\n  turnstileKey,\r\n  reaction: Array.isArray(reaction)\r\n    ? reaction\r\n    : reaction === true\r\n      ? DEFAULT_REACTION\r\n      : [],\r\n  commentSorting,\r\n  ...more,\r\n});\r\n","export const errorHandler = (err: Error): void => {\r\n  if (err.name !== 'AbortError') console.error(err.message);\r\n};\r\n","export const getQuery = (element: HTMLElement): string | null => {\r\n  const { path } = element.dataset;\r\n\r\n  return path?.length ? path : null;\r\n};\r\n","import type { GetArticleCounterResponse } from '@waline/api';\r\nimport { getPageview, updatePageview } from '@waline/api';\r\n\r\nimport type { WalineAbort } from './typings/index.js';\r\nimport { errorHandler, getQuery, getServerURL } from './utils/index.js';\r\n\r\nexport interface WalinePageviewCountOptions {\r\n  /**\r\n   * Waline 服务端地址\r\n   *\r\n   * Waline server url\r\n   */\r\n  serverURL: string;\r\n\r\n  /**\r\n   * 浏览量 CSS 选择器\r\n   *\r\n   * Pageview CSS selector\r\n   *\r\n   * @default '.waline-pageview-count'\r\n   */\r\n  selector?: string;\r\n\r\n  /**\r\n   * 需要更新和获取的路径\r\n   *\r\n   * Path to be fetched and updated\r\n   *\r\n   * @default window.location.pathname\r\n   */\r\n  path?: string;\r\n\r\n  /**\r\n   * 是否在查询时更新 path 的浏览量\r\n   *\r\n   * Whether update pageviews when fetching path result\r\n   *\r\n   * @default true\r\n   */\r\n  update?: boolean;\r\n\r\n  /**\r\n   * 错误提示消息所使用的语言\r\n   *\r\n   * Language of error message\r\n   *\r\n   * @default navigator.language\r\n   */\r\n  lang?: string;\r\n}\r\n\r\nconst renderVisitorCount = (\r\n  counts: GetArticleCounterResponse,\r\n  countElements: HTMLElement[],\r\n): void => {\r\n  countElements.forEach((element, index) => {\r\n    const count = counts[index].time;\r\n\r\n    if (typeof count !== 'number') {\r\n      return;\r\n    }\r\n\r\n    element.innerText = count.toString();\r\n  });\r\n};\r\n\r\nexport const pageviewCount = ({\r\n  serverURL,\r\n  path = window.location.pathname,\r\n  selector = '.waline-pageview-count',\r\n  update = true,\r\n  lang = navigator.language,\r\n}: WalinePageviewCountOptions): WalineAbort => {\r\n  const controller = new AbortController();\r\n\r\n  const elements = Array.from(\r\n    // pageview selectors\r\n    document.querySelectorAll<HTMLElement>(selector),\r\n  );\r\n\r\n  const filter = (element: HTMLElement): boolean => {\r\n    const query = getQuery(element);\r\n\r\n    return query !== null && path !== query;\r\n  };\r\n\r\n  const fetch = (elements: HTMLElement[]): Promise<void> =>\r\n    getPageview({\r\n      serverURL: getServerURL(serverURL),\r\n      paths: elements.map((element) => getQuery(element) ?? path),\r\n      lang,\r\n      signal: controller.signal,\r\n    })\r\n      .then((counts) => renderVisitorCount(counts, elements))\r\n      .catch(errorHandler);\r\n\r\n  // we should update pageviews\r\n  if (update) {\r\n    const normalElements = elements.filter((element) => !filter(element));\r\n    const elementsNeedstoBeFetched = elements.filter(filter);\r\n\r\n    void updatePageview({\r\n      serverURL: getServerURL(serverURL),\r\n      path,\r\n      lang,\r\n    }).then((counts) => renderVisitorCount(counts, normalElements));\r\n\r\n    // if we should fetch count of other pages\r\n    if (elementsNeedstoBeFetched.length) {\r\n      void fetch(elementsNeedstoBeFetched);\r\n    }\r\n  }\r\n  // we should not update pageviews\r\n  else {\r\n    void fetch(elements);\r\n  }\r\n\r\n  return controller.abort.bind(controller);\r\n};\r\n"],"names":["version","m","s","c","n","p","o","a","t","r","d","j","v","removeEndingSplash","content","isLinkHttp","link","getServerURL","serverURL","result","errorHandler","err","getQuery","element","path","renderVisitorCount","counts","countElements","index","count","pageviewCount","selector","update","lang","controller","elements","filter","query","fetch","getPageview","normalElements","elementsNeedstoBeFetched","updatePageview"],"mappings":"AAEO,MAAMA,EAAU,QCFjBC,EAAE,CAAC,eAAe,kBAAkB,EAAEC,EAAE,GAAG,GAAG,EAAE,QAAQ,OAAO,GAAG,CAAC,OAAOC,EAAE,CAAC,EAAEC,EAAE,KAAK,CAAC,GAAG,OAAO,GAAG,UAAU,EAAE,MAAM,MAAM,IAAI,UAAU,GAAGA,CAAC,gBAAgB,EAAE,KAAK,KAAK,EAAE,MAAM,EAAE,EAAE,OAAO,CAAC,EAAEC,EAAE,CAAC,CAAC,UAAU,EAAE,KAAKD,EAAE,MAAME,EAAE,KAAKC,EAAE,OAAOC,CAAC,IAAI,MAAM,GAAGN,EAAE,CAAC,CAAC,gBAAgB,mBAAmBI,EAAE,KAAK,GAAG,CAAC,CAAC,SAAS,mBAAmBC,EAAE,KAAK,GAAG,CAAC,CAAC,SAASH,CAAC,GAAG,CAAC,OAAOI,CAAC,CAAC,EAAE,KAAKC,GAAGA,EAAE,MAAM,EAAE,KAAKA,GAAGN,EAAEM,EAAE,aAAa,EAAE,IAAI,EAAEC,EAAE,CAAC,CAAC,UAAU,EAAE,KAAKN,EAAE,KAAKE,EAAE,KAAKC,EAAE,OAAOC,CAAC,IAAI,MAAM,GAAGN,EAAE,CAAC,CAAC,gBAAgBE,CAAC,GAAG,CAAC,OAAO,OAAO,QAAQH,EAAE,KAAK,KAAK,UAAU,CAAC,KAAKK,EAAE,KAAKC,EAAE,OAAOC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAKC,GAAGA,EAAE,KAAI,CAAE,EAAE,KAAKA,GAAGN,EAAEM,EAAE,gBAAgB,EAAE,IAAI,EAA8pDE,EAAE,CAAC,CAAC,UAAU,EAAE,KAAKP,EAAE,MAAME,EAAE,OAAOC,CAAC,IAAIF,EAAE,CAAC,UAAU,EAAE,KAAKD,EAAE,MAAME,EAAE,KAAK,CAAC,MAAM,EAAE,OAAOC,CAAC,CAAC,EAAEK,EAAE,GAAGF,EAAE,CAAC,GAAG,EAAE,KAAK,OAAO,OAAO,KAAK,CAAC,ECUh5EG,EAAqB,CAACC,EAAU,KAC3CA,EAAQ,QAAQ,OAAQ,EAAE,EAEfC,EAAcC,GACzB,kBAAkB,KAAKA,CAAI,ECiChBC,EAAgBC,GAA8B,CACzD,MAAMC,EAASN,EAAmBK,CAAS,EAE3C,OAAOH,EAAWI,CAAM,EAAIA,EAAS,WAAWA,CAAM,EACxD,ECnDaC,EAAgBC,GAAqB,CAC5CA,EAAI,OAAS,cAAc,QAAQ,MAAMA,EAAI,OAAO,CAC1D,ECFaC,EAAYC,GAAwC,CAC/D,KAAM,CAAE,KAAAC,CAAK,EAAID,EAAQ,QAEzB,OAAOC,GAAA,MAAAA,EAAM,OAASA,EAAO,IAC/B,EC+CMC,EAAqB,CACzBC,EACAC,IACS,CACTA,EAAc,QAAQ,CAACJ,EAASK,IAAU,CACxC,MAAMC,EAAQH,EAAOE,CAAK,EAAE,KAExB,OAAOC,GAAU,WAIrBN,EAAQ,UAAYM,EAAM,SAC5B,EAAA,CAAC,CACH,EAEaC,EAAgB,CAAC,CAC5B,UAAAZ,EACA,KAAAM,EAAO,OAAO,SAAS,SACvB,SAAAO,EAAW,yBACX,OAAAC,EAAS,GACT,KAAAC,EAAO,UAAU,QACnB,IAA+C,CAC7C,MAAMC,EAAa,IAAI,gBAEjBC,EAAW,MAAM,KAErB,SAAS,iBAA8BJ,CAAQ,CACjD,EAEMK,EAAUb,GAAkC,CAChD,MAAMc,EAAQf,EAASC,CAAO,EAE9B,OAAOc,IAAU,MAAQb,IAASa,CACpC,EAEMC,EAASH,GACbI,EAAY,CACV,UAAWtB,EAAaC,CAAS,EACjC,MAAOiB,EAAS,IAAKZ,GAAYD,EAASC,CAAO,GAAKC,CAAI,EAC1D,KAAAS,EACA,OAAQC,EAAW,MACrB,CAAC,EACE,KAAMR,GAAWD,EAAmBC,EAAQS,CAAQ,CAAC,EACrD,MAAMf,CAAY,EAGvB,GAAIY,EAAQ,CACV,MAAMQ,EAAiBL,EAAS,OAAQZ,GAAY,CAACa,EAAOb,CAAO,CAAC,EAC9DkB,EAA2BN,EAAS,OAAOC,CAAM,EAElDM,EAAe,CAClB,UAAWzB,EAAaC,CAAS,EACjC,KAAAM,EACA,KAAAS,CACF,CAAC,EAAE,KAAMP,GAAWD,EAAmBC,EAAQc,CAAc,CAAC,EAG1DC,EAAyB,QACtBH,EAAMG,CAAwB,CAEvC,MAGOH,EAAMH,CAAQ,EAGrB,OAAOD,EAAW,MAAM,KAAKA,CAAU,CACzC","x_google_ignoreList":[1]}